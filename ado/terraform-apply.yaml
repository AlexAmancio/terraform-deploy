name: Manually Apply Terraform

trigger: none
pr: none

pool:
  vmImage: "ubuntu-latest"

parameters:
  - name: environment
    displayName: "Select the environment to deploy to"
    type: string
    default: Dev
    values:
      - Dev
      - Prod

variables:
  - name: EnvironmentName
    ${{ if eq(parameters.environment, 'Dev') }}:
      value: "dev"
    ${{ if eq(parameters.environment, 'Prod') }}:
      value: "prod"

jobs:
  - job: Terraform_Plan
    displayName: Terraform Plan
    timeoutInMinutes: 60

    steps:
      - checkout: self

      - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        inputs:
          terraformVersion: "1.11.3"

      # Usamos script para init con backend local
      - script: terraform init
        displayName: Terraform Init (Local Backend)
        workingDirectory: "$(System.DefaultWorkingDirectory)/environments/${{ variables.EnvironmentName }}"

      - task: TerraformTaskV4@4
        displayName: Terraform Plan
        inputs:
          provider: "azurerm"
          command: "plan"
          workingDirectory: "$(System.DefaultWorkingDirectory)/environments/${{ variables.EnvironmentName }}"
          environmentServiceNameAzureRM: "service-conn-test"

  - job: waitForApproval
    displayName: Wait for manual approval
    pool: server
    timeoutInMinutes: 60

    dependsOn:
      - Terraform_Plan

    steps:
      - task: ManualValidation@0
        displayName:
        timeoutInMinutes: 60
        inputs:
          notifyUsers: |
            ctineo@veritexbank.com
          instructions: "Please validate the Terraform Plan output"
          onTimeout: "resume"

  - job: Terraform_Apply
    displayName: Terraform Apply
    timeoutInMinutes: 60

    dependsOn:
      - waitForApproval

    steps:
      - task: JasonBJohnson.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        inputs:
          terraformVersion: "1.11.3"

      # Init con script para backend local
      - script: terraform init
        displayName: Terraform Init (Local Backend)
        workingDirectory: "$(System.DefaultWorkingDirectory)/environments/${{ variables.EnvironmentName }}"

      - task: TerraformTaskV4@4
        displayName: Terraform Apply
        inputs:
          provider: "azurerm"
          command: "apply"
          workingDirectory: "$(System.DefaultWorkingDirectory)/environments/${{ variables.EnvironmentName }}"
          environmentServiceNameAzureRM: "service-conn-test"
